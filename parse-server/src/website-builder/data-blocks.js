/**
 * Data Block Templates
 * Pre-built blocks using data components
 */

const dataBlocks = {
  // List and Grid Blocks
  lists: {
    productGrid: {
      label: 'Product Grid',
      category: 'Data Blocks',
      content: {
        type: 'data-dataGrid',
        config: {
          className: 'Product',
          template: [
            '<div class="product-grid">',
            '  {{#each items}}',
            '    <div class="product-card">',
            '      <img src="{{this.image.url}}" alt="{{this.name}}">',
            '      <h3>{{this.name}}</h3>',
            '      <p class="price">${{this.price}}</p>',
            '      <button class="add-to-cart" data-id="{{this.objectId}}">Add to Cart</button>',
            '    </div>',
            '  {{/each}}',
            '</div>',
          ].join('\n'),
          style: [
            '.product-grid {',
            '  display: grid;',
            '  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));',
            '  gap: 30px;',
            '  padding: 20px;',
            '}',
            '.product-card {',
            '  border: 1px solid #eee;',
            '  border-radius: 8px;',
            '  padding: 15px;',
            '  text-align: center;',
            '  transition: transform 0.3s ease;',
            '}',
            '.product-card:hover {',
            '  transform: translateY(-5px);',
            '  box-shadow: 0 5px 15px rgba(0,0,0,0.1);',
            '}',
            '.product-card img {',
            '  width: 100%;',
            '  height: 200px;',
            '  object-fit: cover;',
            '  border-radius: 4px;',
            '}',
            '.product-card h3 {',
            '  margin: 10px 0;',
            '  font-size: 1.2em;',
            '}',
            '.price {',
            '  color: #2ecc71;',
            '  font-weight: bold;',
            '  font-size: 1.1em;',
            '}',
            '.add-to-cart {',
            '  background: #3498db;',
            '  color: white;',
            '  border: none;',
            '  padding: 8px 15px;',
            '  border-radius: 4px;',
            '  cursor: pointer;',
            '  transition: background 0.3s ease;',
            '}',
            '.add-to-cart:hover {',
            '  background: #2980b9;',
            '}',
          ].join('\n'),
        },
      },
    },

    blogList: {
      label: 'Blog List',
      category: 'Data Blocks',
      content: {
        type: 'data-dataList',
        config: {
          className: 'Post',
          template: [
            '<div class="blog-list">',
            '  {{#each items}}',
            '    <article class="blog-post">',
            '      <div class="post-image">',
            '        <img src="{{this.featuredImage.url}}" alt="{{this.title}}">',
            '      </div>',
            '      <div class="post-content">',
            '        <h2>{{this.title}}</h2>',
            '        <div class="post-meta">',
            '          <span class="date">{{formatDate this.createdAt}}</span>',
            '          <span class="author">By {{this.author.username}}</span>',
            '        </div>',
            '        <p class="excerpt">{{this.excerpt}}</p>',
            '        <a href="/post/{{this.objectId}}" class="read-more">Read More</a>',
            '      </div>',
            '    </article>',
            '  {{/each}}',
            '</div>',
          ].join('\n'),
          style: [
            '.blog-list {',
            '  max-width: 800px;',
            '  margin: 0 auto;',
            '  padding: 20px;',
            '}',
            '.blog-post {',
            '  display: flex;',
            '  margin-bottom: 40px;',
            '  border-bottom: 1px solid #eee;',
            '  padding-bottom: 40px;',
            '}',
            '.post-image {',
            '  flex: 0 0 200px;',
            '  margin-right: 30px;',
            '}',
            '.post-image img {',
            '  width: 100%;',
            '  height: 150px;',
            '  object-fit: cover;',
            '  border-radius: 8px;',
            '}',
            '.post-content {',
            '  flex: 1;',
            '}',
            '.post-content h2 {',
            '  margin: 0 0 10px 0;',
            '  font-size: 1.8em;',
            '}',
            '.post-meta {',
            '  color: #666;',
            '  margin-bottom: 15px;',
            '  font-size: 0.9em;',
            '}',
            '.post-meta span {',
            '  margin-right: 15px;',
            '}',
            '.excerpt {',
            '  color: #444;',
            '  line-height: 1.6;',
            '}',
            '.read-more {',
            '  display: inline-block;',
            '  color: #3498db;',
            '  text-decoration: none;',
            '  margin-top: 15px;',
            '  font-weight: bold;',
            '}',
          ].join('\n'),
        },
      },
    },
  },

  // Dashboard Blocks
  dashboard: {
    statsGrid: {
      label: 'Stats Grid',
      category: 'Data Blocks',
      content: {
        type: 'data-dataDashboard',
        config: {
          layout: 'grid',
          widgets: [
            {
              type: 'data-dataMetric',
              config: {
                className: 'Order',
                metric: 'count',
                label: 'Total Orders',
              },
            },
            {
              type: 'data-dataMetric',
              config: {
                className: 'Order',
                metric: 'sum',
                field: 'total',
                label: 'Revenue',
              },
            },
            {
              type: 'data-dataMetric',
              config: {
                className: '_User',
                metric: 'count',
                label: 'Users',
              },
            },
          ],
          style: [
            '.stats-grid {',
            '  display: grid;',
            '  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));',
            '  gap: 20px;',
            '  padding: 20px;',
            '}',
            '.stat-card {',
            '  background: white;',
            '  padding: 20px;',
            '  border-radius: 8px;',
            '  box-shadow: 0 2px 10px rgba(0,0,0,0.1);',
            '  text-align: center;',
            '}',
            '.stat-value {',
            '  font-size: 2em;',
            '  font-weight: bold;',
            '  color: #2c3e50;',
            '}',
            '.stat-label {',
            '  color: #7f8c8d;',
            '  margin-top: 5px;',
            '}',
          ].join('\n'),
        },
      },
    },

    salesChart: {
      label: 'Sales Chart',
      category: 'Data Blocks',
      content: {
        type: 'data-dataChart',
        config: {
          className: 'Order',
          type: 'line',
          dataField: 'total',
          groupBy: 'createdAt',
          aggregation: 'sum',
          options: {
            title: 'Sales Over Time',
            xAxis: {
              type: 'time',
              title: 'Date',
            },
            yAxis: {
              title: 'Sales ($)',
            },
          },
        },
      },
    },
  },

  // Form Blocks
  forms: {
    contactForm: {
      label: 'Contact Form',
      category: 'Data Blocks',
      content: {
        type: 'data-dataForm',
        config: {
          className: 'Contact',
          template: [
            '<form class="contact-form">',
            '  <div class="form-group">',
            '    <label for="name">Name</label>',
            '    <input type="text" id="name" name="name" required>',
            '  </div>',
            '  <div class="form-group">',
            '    <label for="email">Email</label>',
            '    <input type="email" id="email" name="email" required>',
            '  </div>',
            '  <div class="form-group">',
            '    <label for="message">Message</label>',
            '    <textarea id="message" name="message" rows="5" required></textarea>',
            '  </div>',
            '  <button type="submit">Send Message</button>',
            '</form>',
          ].join('\n'),
          style: [
            '.contact-form {',
            '  max-width: 600px;',
            '  margin: 0 auto;',
            '  padding: 30px;',
            '  background: white;',
            '  border-radius: 8px;',
            '  box-shadow: 0 2px 10px rgba(0,0,0,0.1);',
            '}',
            '.form-group {',
            '  margin-bottom: 20px;',
            '}',
            '.form-group label {',
            '  display: block;',
            '  margin-bottom: 5px;',
            '  color: #333;',
            '}',
            '.form-group input,',
            '.form-group textarea {',
            '  width: 100%;',
            '  padding: 8px;',
            '  border: 1px solid #ddd;',
            '  border-radius: 4px;',
            '}',
            'button[type="submit"] {',
            '  background: #3498db;',
            '  color: white;',
            '  padding: 10px 20px;',
            '  border: none;',
            '  border-radius: 4px;',
            '  cursor: pointer;',
            '  width: 100%;',
            '}',
            'button[type="submit"]:hover {',
            '  background: #2980b9;',
            '}',
          ].join('\n'),
        },
      },
    },
  },

  // Profile Blocks
  profiles: {
    userProfile: {
      label: 'User Profile',
      category: 'Data Blocks',
      content: {
        type: 'data-userProfile',
        config: {
          template: [
            '<div class="user-profile">',
            '  <div class="profile-header">',
            '    <img src="{{user.avatar.url}}" alt="{{user.username}}" class="avatar">',
            '    <h2>{{user.username}}</h2>',
            '    <p class="email">{{user.email}}</p>',
            '  </div>',
            '  <div class="profile-content">',
            '    <div class="profile-section">',
            '      <h3>About</h3>',
            '      <p>{{user.bio}}</p>',
            '    </div>',
            '    <div class="profile-section">',
            '      <h3>Activity</h3>',
            '      <div class="activity-list">',
            '        {{#each activities}}',
            '          <div class="activity-item">',
            '            <span class="activity-date">{{formatDate this.date}}</span>',
            '            <span class="activity-text">{{this.text}}</span>',
            '          </div>',
            '        {{/each}}',
            '      </div>',
            '    </div>',
            '  </div>',
            '</div>',
          ].join('\n'),
          style: [
            '.user-profile {',
            '  max-width: 800px;',
            '  margin: 0 auto;',
            '  background: white;',
            '  border-radius: 8px;',
            '  box-shadow: 0 2px 10px rgba(0,0,0,0.1);',
            '  overflow: hidden;',
            '}',
            '.profile-header {',
            '  background: linear-gradient(135deg, #3498db, #2c3e50);',
            '  color: white;',
            '  padding: 40px;',
            '  text-align: center;',
            '}',
            '.avatar {',
            '  width: 120px;',
            '  height: 120px;',
            '  border-radius: 60px;',
            '  border: 4px solid white;',
            '  margin-bottom: 15px;',
            '}',
            '.profile-content {',
            '  padding: 30px;',
            '}',
            '.profile-section {',
            '  margin-bottom: 30px;',
            '}',
            '.profile-section h3 {',
            '  border-bottom: 2px solid #eee;',
            '  padding-bottom: 10px;',
            '  margin-bottom: 20px;',
            '}',
            '.activity-item {',
            '  display: flex;',
            '  margin-bottom: 15px;',
            '  padding-bottom: 15px;',
            '  border-bottom: 1px solid #eee;',
            '}',
            '.activity-date {',
            '  flex: 0 0 120px;',
            '  color: #666;',
            '}',
          ].join('\n'),
        },
      },
    },
  },

  // Register blocks with GrapesJS
  register(editor) {
    Object.entries(this).forEach(([category, blocks]) => {
      if (typeof blocks === 'object') {
        Object.entries(blocks).forEach(([id, block]) => {
          editor.BlockManager.add(`data-${id}`, {
            label: block.label,
            category: block.category,
            content: block.content,
            render: ({ model }) => `
              <div class="gjs-block">
                <div class="gjs-block-label">${block.label}</div>
              </div>
            `,
          });
        });
      }
    });
  },
};

module.exports = dataBlocks;
