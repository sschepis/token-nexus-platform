import typescript from '@rollup/plugin-typescript';
import commonjs from '@rollup/plugin-commonjs';
import { nodeResolve } from '@rollup/plugin-node-resolve';
import dts from 'rollup-plugin-dts';
import { createRequire } from 'module'; // Use createRequire for JSON import

const require = createRequire(import.meta.url);
const packageJson = require('./package.json');

const external = [
  ...Object.keys(packageJson.dependencies || {}),
  ...Object.keys(packageJson.peerDependencies || {}),
  'ethers/providers', // Example if using specific subpaths not automatically found
  'gun/gun',
  'gun/sea',
  'gun/lib/then',
  'gun/lib/unset'
];

export default [
  {
    input: 'src/index.ts',
    output: [
      {
        file: packageJson.main,
        format: 'cjs',
        sourcemap: true,
      },
      {
        file: packageJson.module,
        format: 'esm',
        sourcemap: true,
      },
    ],
    plugins: [
      nodeResolve(),
      commonjs(),
      typescript({ tsconfig: './tsconfig.json', exclude: ['**/__tests__/**', '**/*.test.ts', '**/*.spec.ts'] }),
    ],
    external: external,
  },
  {
    input: 'dist/types/index.d.ts', // Path to main .d.ts file generated by tsc
    output: [{ file: 'dist/index.d.ts', format: 'esm' }],
    plugins: [dts()],
    external: external, // Also externalize dependencies for .d.ts bundling
  },
];